{
    // Network Intrusion Detection System Configuration
    // Main configuration file for capture, detection, and system settings
    
    "version": "1.0.0",
    
    "capture": {
      "interface": {
        "name": "en0",                      // Network interface to capture from (use 'auto' for automatic selection)
        "promiscuous_mode": true,            // Enable promiscuous mode to capture all packets on the interface
        "monitor_mode": false,               // Enable monitor mode for wireless interfaces (requires compatible hardware)
        "buffer_size": 1048576,              // Packet buffer size in bytes (1MB default)
        "timeout": 0,                        // Capture timeout in seconds (0 = unlimited)
        "snaplen": 65535                     // Maximum bytes to capture per packet (65535 = full packet)
      },
      
      "filters": {
        "bpf_filter": "",                    // Berkeley Packet Filter expression (e.g., "tcp port 80 or tcp port 443")
        "exclude_hosts": [                   // Hosts to exclude from capture (e.g., monitoring server)
          "127.0.0.1"
        ],
        "include_only": []                   // If not empty, only capture traffic to/from these hosts
      },
      
      "limits": {
        "max_packets": 0,                    // Maximum packets to capture (0 = unlimited)
        "max_file_size": 1073741824,         // Maximum PCAP file size in bytes for rotation (1GB)
        "max_memory_buffer": 104857600       // Maximum memory buffer size in bytes (100MB)
      },
      
      "pcap": {
        "enabled": false,                    // Enable saving captured packets to PCAP files
        "directory": "./pcaps",              // Directory to save PCAP files
        "file_prefix": "nids_capture_",      // Prefix for PCAP filenames
        "rotate_interval": 3600,             // Rotate PCAP files every N seconds (3600 = 1 hour)
        "compress": true                     // Compress PCAP files (uses gzip)
      }
    },
    
    "feature_extraction": {
      "enabled_features": {
        "basic": true,                       // Basic packet features (size, protocol, ports)
        "tcp_flags": true,                   // TCP flag analysis
        "http": true,                        // HTTP protocol analysis
        "dns": true,                         // DNS protocol analysis
        "tls": true,                         // TLS/SSL protocol analysis
        "payload": true,                     // Packet payload analysis
        "flow": true,                        // Flow-based features
        "statistical": true,                 // Statistical features
        "timing": true                       // Timing-based features
      },
      
      "flow_tracking": {
        "timeout": {
          "tcp": 3600,                       // TCP flow timeout in seconds (1 hour)
          "udp": 300,                        // UDP flow timeout in seconds (5 minutes)
          "icmp": 60                         // ICMP flow timeout in seconds (1 minute)
        },
        "max_flows": 100000,                 // Maximum flows to track simultaneously
        "bidirectional": true                // Track flows bidirectionally
      },
      
      "payload_analysis": {
        "max_depth": 1024,                   // Maximum payload bytes to analyze
        "entropy": true,                     // Calculate payload entropy
        "patterns": true,                    // Search for suspicious patterns
        "strings": true,                     // Extract string features
        "n_gram_analysis": false             // Perform n-gram analysis (resource intensive)
      },
      
      "statistical": {
        "window_size": 100,                  // Window size for statistical calculations
        "update_frequency": 10,              // Update statistical features every N packets
        "outlier_detection": {
          "enabled": true,
          "z_score_threshold": 3.0           // Z-score threshold for outlier detection
        }
      },
      
      "timing": {
        "min_packets": 5,                    // Minimum packets to compute timing features
        "max_idle": 30                       // Maximum idle time (seconds) before resetting timing stats
      }
    },
    
    "detection": {
      "signature_based": {
        "enabled": true,
        "rules_path": "./config/detection_rules.json",
        "custom_rules_path": "./config/custom_rules.json",
        "update_interval": 86400,            // Update rules every N seconds (86400 = 1 day)
        "sensitivity": "medium"              // Detection sensitivity (low, medium, high)
      },
      
      "anomaly_detection": {
        "enabled": true,
        "thresholds_path": "./config/thresholds.json",
        "learning_period": 3600,             // Learning period in seconds (1 hour)
        "sensitivity": "medium",             // Detection sensitivity (low, medium, high)
        "min_data_points": 1000              // Minimum data points required before anomaly detection
      },
      
      "behavior_analysis": {
        "enabled": true,
        "profiles_path": "./data/profiles",
        "training_period": 86400,            // Training period in seconds (1 day)
        "update_frequency": 3600             // Update behavior profiles every N seconds (1 hour)
      },
      
      "ml_detection": {
        "enabled": false,                    // Machine learning detection (resource intensive)
        "model_path": "./models",
        "feature_set": "basic",              // Feature set to use (basic, extended, full)
        "threshold": 0.7,                    // Detection threshold
        "retraining_interval": 604800        // Retrain models every N seconds (604800 = 1 week)
      }
    },
    
    "alerting": {
      "log_alerts": true,                    // Log alerts to file
      "console_output": true,                // Output alerts to console
      "email": {
        "enabled": false,
        "smtp_server": "smtp.example.com",
        "smtp_port": 587,
        "use_tls": true,
        "username": "user@example.com",
        "password": "",                      // Leave empty, will be prompted during startup
        "from_address": "nids@example.com",
        "to_addresses": ["admin@example.com"],
        "min_severity": "high"               // Minimum severity for email alerts (low, medium, high, critical)
      },
      "syslog": {
        "enabled": false,
        "server": "localhost",
        "port": 514,
        "protocol": "udp",
        "facility": "local0",
        "min_severity": "medium"             // Minimum severity for syslog alerts
      },
      "webhook": {
        "enabled": false,
        "url": "https://example.com/webhook",
        "custom_headers": {},
        "min_severity": "medium"             // Minimum severity for webhook alerts
      }
    },
    
    "storage": {
      "database": {
        "enabled": true,
        "type": "sqlite",                    // Database type (sqlite, mysql, postgresql)
        "path": "./data/nids.db",            // Path for SQLite, ignored for other types
        "host": "localhost",                 // Database host, ignored for SQLite
        "port": 3306,                        // Database port, ignored for SQLite
        "name": "nids",                      // Database name
        "username": "nids_user",             // Database username, ignored for SQLite
        "password": "",                      // Leave empty, will be prompted during startup
        "max_connections": 10,               // Maximum database connections
        "timeout": 30                        // Database operation timeout in seconds
      },
      "csv_export": {
        "enabled": false,                    // Export data to CSV files
        "directory": "./export",             // Directory to save CSV files
        "interval": 3600                     // Export data every N seconds (3600 = 1 hour)
      },
      "retention": {
        "alerts_days": 90,                   // Keep alerts for N days
        "traffic_data_days": 30,             // Keep traffic data for N days
        "pcap_days": 7                       // Keep PCAP files for N days
      }
    },
    
    "system": {
      "logging": {
        "level": "info",                     // Logging level (debug, info, warning, error, critical)
        "file": {
          "enabled": true,
          "path": "./logs/nids.log",         // Log file path
          "max_size_mb": 100,                // Maximum log file size in MB
          "backup_count": 10                 // Number of backup log files to keep
        },
        "syslog": {
          "enabled": false,
          "server": "localhost",
          "port": 514,
          "facility": "local0"
        }
      },
      
      "performance": {
        "threads": 4,                        // Number of worker threads (0 = auto-detect)
        "batch_size": 1000,                  // Process packets in batches
        "cpu_affinity": [],                  // Bind threads to specific CPU cores (empty = no binding)
        "priority": "normal",                // Process priority (low, normal, high)
        "memory_limit_mb": 1024              // Maximum memory usage in MB (0 = no limit)
      },
      
      "security": {
        "drop_privileges": true,             // Drop root privileges after initialization
        "user": "nobody",                    // User to run as after dropping privileges
        "group": "nobody",                   // Group to run as after dropping privileges
        "chroot": "",                        // Chroot directory (empty = no chroot)
        "sandbox": true                      // Enable additional sandboxing
      },
      
      "debug": {
        "enabled": false,                    // Enable debug mode
        "verbose": false,                    // Enable verbose output
        "packet_dump": false,                // Dump packet contents to log (security risk!)
        "profile_code": false,               // Profile code performance
        "memory_tracking": false             // Track memory usage
      },
      
      "updates": {
        "auto_check": true,                  // Automatically check for updates
        "check_interval": 86400,             // Check for updates every N seconds (86400 = 1 day)
        "auto_update": false                 // Automatically install updates
      }
    },
    
    "dashboard": {
      "enabled": false,                      // Enable web dashboard
      "host": "127.0.0.1",                   // Dashboard host (use 0.0.0.0 to listen on all interfaces)
      "port": 8080,                          // Dashboard port
      "ssl": {
        "enabled": false,
        "cert": "./ssl/cert.pem",
        "key": "./ssl/key.pem"
      },
      "authentication": {
        "enabled": true,
        "type": "basic",                     // Authentication type (basic, jwt, ldap)
        "users": [
          {
            "username": "admin",
            "password_hash": ""              // Will be set during first run
          }
        ]
      },
      "refresh_interval": 10                 // Dashboard auto-refresh interval in seconds
    }
  }